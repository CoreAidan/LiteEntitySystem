### YamlMime:ManagedReference
items:
- uid: LiteEntitySystem.ExecuteFlags
  commentId: T:LiteEntitySystem.ExecuteFlags
  id: ExecuteFlags
  parent: LiteEntitySystem
  children:
  - LiteEntitySystem.ExecuteFlags.All
  - LiteEntitySystem.ExecuteFlags.ExecuteOnPrediction
  - LiteEntitySystem.ExecuteFlags.ExecuteOnServer
  - LiteEntitySystem.ExecuteFlags.None
  - LiteEntitySystem.ExecuteFlags.SendToAll
  - LiteEntitySystem.ExecuteFlags.SendToOther
  - LiteEntitySystem.ExecuteFlags.SendToOwner
  - LiteEntitySystem.ExecuteFlags.SyncGroup1
  - LiteEntitySystem.ExecuteFlags.SyncGroup2
  - LiteEntitySystem.ExecuteFlags.SyncGroup3
  - LiteEntitySystem.ExecuteFlags.SyncGroup4
  - LiteEntitySystem.ExecuteFlags.SyncGroup5
  langs:
  - csharp
  - vb
  name: ExecuteFlags
  nameWithType: ExecuteFlags
  fullName: LiteEntitySystem.ExecuteFlags
  type: Enum
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: >-
      [Flags]

      public enum ExecuteFlags : ushort
    content.vb: >-
      <Flags>

      Public Enum ExecuteFlags As UShort
  extensionMethods:
  - LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.GetEnumValueInt``1
  - LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.GetEnumValue``1
  - LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.HasFlagFast``1(LiteEntitySystem.ExecuteFlags)
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: LiteEntitySystem.ExecuteFlags.None
  commentId: F:LiteEntitySystem.ExecuteFlags.None
  id: None
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ExecuteFlags.None
  fullName: LiteEntitySystem.ExecuteFlags.None
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  syntax:
    content: None = 0
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SendToOwner
  commentId: F:LiteEntitySystem.ExecuteFlags.SendToOwner
  id: SendToOwner
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SendToOwner
  nameWithType: ExecuteFlags.SendToOwner
  fullName: LiteEntitySystem.ExecuteFlags.SendToOwner
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Execute RPC for owner of entity
  example: []
  syntax:
    content: SendToOwner = 1
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SendToOther
  commentId: F:LiteEntitySystem.ExecuteFlags.SendToOther
  id: SendToOther
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SendToOther
  nameWithType: ExecuteFlags.SendToOther
  fullName: LiteEntitySystem.ExecuteFlags.SendToOther
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Execute RPC for non owners
  example: []
  syntax:
    content: SendToOther = 2
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SendToAll
  commentId: F:LiteEntitySystem.ExecuteFlags.SendToAll
  id: SendToAll
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SendToAll
  nameWithType: ExecuteFlags.SendToAll
  fullName: LiteEntitySystem.ExecuteFlags.SendToAll
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Execute RPC for all players
  example: []
  syntax:
    content: SendToAll = SendToOwner | SendToOther
    return:
      type: LiteEntitySystem.ExecuteFlags
    content.vb: SendToAll = SendToOwner Or SendToOther
- uid: LiteEntitySystem.ExecuteFlags.ExecuteOnPrediction
  commentId: F:LiteEntitySystem.ExecuteFlags.ExecuteOnPrediction
  id: ExecuteOnPrediction
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: ExecuteOnPrediction
  nameWithType: ExecuteFlags.ExecuteOnPrediction
  fullName: LiteEntitySystem.ExecuteFlags.ExecuteOnPrediction
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Execute RPC on client for owner of entity on prediction
  example: []
  syntax:
    content: ExecuteOnPrediction = 4
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.ExecuteOnServer
  commentId: F:LiteEntitySystem.ExecuteFlags.ExecuteOnServer
  id: ExecuteOnServer
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: ExecuteOnServer
  nameWithType: ExecuteFlags.ExecuteOnServer
  fullName: LiteEntitySystem.ExecuteFlags.ExecuteOnServer
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Execute RPC directly on server
  example: []
  syntax:
    content: ExecuteOnServer = 8
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.All
  commentId: F:LiteEntitySystem.ExecuteFlags.All
  id: All
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: All
  nameWithType: ExecuteFlags.All
  fullName: LiteEntitySystem.ExecuteFlags.All
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: All flags, send to owner, to others, execute on prediction and on server
  example: []
  syntax:
    content: All = SendToAll | ExecuteOnPrediction | ExecuteOnServer
    return:
      type: LiteEntitySystem.ExecuteFlags
    content.vb: All = SendToAll Or ExecuteOnPrediction Or ExecuteOnServer
- uid: LiteEntitySystem.ExecuteFlags.SyncGroup1
  commentId: F:LiteEntitySystem.ExecuteFlags.SyncGroup1
  id: SyncGroup1
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SyncGroup1
  nameWithType: ExecuteFlags.SyncGroup1
  fullName: LiteEntitySystem.ExecuteFlags.SyncGroup1
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Toggleable sync group 1. Can include SyncVars and RPCs.
  example: []
  syntax:
    content: SyncGroup1 = 16
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SyncGroup2
  commentId: F:LiteEntitySystem.ExecuteFlags.SyncGroup2
  id: SyncGroup2
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SyncGroup2
  nameWithType: ExecuteFlags.SyncGroup2
  fullName: LiteEntitySystem.ExecuteFlags.SyncGroup2
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Toggleable sync group 2. Can include SyncVars and RPCs.
  example: []
  syntax:
    content: SyncGroup2 = 32
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SyncGroup3
  commentId: F:LiteEntitySystem.ExecuteFlags.SyncGroup3
  id: SyncGroup3
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SyncGroup3
  nameWithType: ExecuteFlags.SyncGroup3
  fullName: LiteEntitySystem.ExecuteFlags.SyncGroup3
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Toggleable sync group 3. Can include SyncVars and RPCs.
  example: []
  syntax:
    content: SyncGroup3 = 64
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SyncGroup4
  commentId: F:LiteEntitySystem.ExecuteFlags.SyncGroup4
  id: SyncGroup4
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SyncGroup4
  nameWithType: ExecuteFlags.SyncGroup4
  fullName: LiteEntitySystem.ExecuteFlags.SyncGroup4
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Toggleable sync group 4. Can include SyncVars and RPCs.
  example: []
  syntax:
    content: SyncGroup4 = 128
    return:
      type: LiteEntitySystem.ExecuteFlags
- uid: LiteEntitySystem.ExecuteFlags.SyncGroup5
  commentId: F:LiteEntitySystem.ExecuteFlags.SyncGroup5
  id: SyncGroup5
  parent: LiteEntitySystem.ExecuteFlags
  langs:
  - csharp
  - vb
  name: SyncGroup5
  nameWithType: ExecuteFlags.SyncGroup5
  fullName: LiteEntitySystem.ExecuteFlags.SyncGroup5
  type: Field
  assemblies:
  - LiteEntitySystem
  namespace: LiteEntitySystem
  summary: Toggleable sync group 5. Can include SyncVars and RPCs.
  example: []
  syntax:
    content: SyncGroup5 = 256
    return:
      type: LiteEntitySystem.ExecuteFlags
references:
- uid: LiteEntitySystem
  commentId: N:LiteEntitySystem
  href: LiteEntitySystem.html
  name: LiteEntitySystem
  nameWithType: LiteEntitySystem
  fullName: LiteEntitySystem
- uid: LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.GetEnumValueInt``1
  commentId: M:LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
  parent: LiteEntitySystem.Utils
  definition: LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  name: GetEnumValueInt<ExecuteFlags>(ExecuteFlags)
  nameWithType: Utils.GetEnumValueInt<ExecuteFlags>(ExecuteFlags)
  fullName: LiteEntitySystem.Utils.GetEnumValueInt<LiteEntitySystem.ExecuteFlags>(LiteEntitySystem.ExecuteFlags)
  nameWithType.vb: Utils.GetEnumValueInt(Of ExecuteFlags)(ExecuteFlags)
  fullName.vb: LiteEntitySystem.Utils.GetEnumValueInt(Of LiteEntitySystem.ExecuteFlags)(LiteEntitySystem.ExecuteFlags)
  name.vb: GetEnumValueInt(Of ExecuteFlags)(ExecuteFlags)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.GetEnumValueInt``1(LiteEntitySystem.ExecuteFlags)
    name: GetEnumValueInt
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  - name: <
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: '>'
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.GetEnumValueInt``1(LiteEntitySystem.ExecuteFlags)
    name: GetEnumValueInt
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
- uid: LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.GetEnumValue``1
  commentId: M:LiteEntitySystem.Utils.GetEnumValue``1(``0)
  parent: LiteEntitySystem.Utils
  definition: LiteEntitySystem.Utils.GetEnumValue``1(``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  name: GetEnumValue<ExecuteFlags>(ExecuteFlags)
  nameWithType: Utils.GetEnumValue<ExecuteFlags>(ExecuteFlags)
  fullName: LiteEntitySystem.Utils.GetEnumValue<LiteEntitySystem.ExecuteFlags>(LiteEntitySystem.ExecuteFlags)
  nameWithType.vb: Utils.GetEnumValue(Of ExecuteFlags)(ExecuteFlags)
  fullName.vb: LiteEntitySystem.Utils.GetEnumValue(Of LiteEntitySystem.ExecuteFlags)(LiteEntitySystem.ExecuteFlags)
  name.vb: GetEnumValue(Of ExecuteFlags)(ExecuteFlags)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.GetEnumValue``1(LiteEntitySystem.ExecuteFlags)
    name: GetEnumValue
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  - name: <
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: '>'
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.GetEnumValue``1(LiteEntitySystem.ExecuteFlags)
    name: GetEnumValue
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
- uid: LiteEntitySystem.ExecuteFlags.LiteEntitySystem.Utils.HasFlagFast``1(LiteEntitySystem.ExecuteFlags)
  commentId: M:LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
  parent: LiteEntitySystem.Utils
  definition: LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  name: HasFlagFast<ExecuteFlags>(ExecuteFlags, ExecuteFlags)
  nameWithType: Utils.HasFlagFast<ExecuteFlags>(ExecuteFlags, ExecuteFlags)
  fullName: LiteEntitySystem.Utils.HasFlagFast<LiteEntitySystem.ExecuteFlags>(LiteEntitySystem.ExecuteFlags, LiteEntitySystem.ExecuteFlags)
  nameWithType.vb: Utils.HasFlagFast(Of ExecuteFlags)(ExecuteFlags, ExecuteFlags)
  fullName.vb: LiteEntitySystem.Utils.HasFlagFast(Of LiteEntitySystem.ExecuteFlags)(LiteEntitySystem.ExecuteFlags, LiteEntitySystem.ExecuteFlags)
  name.vb: HasFlagFast(Of ExecuteFlags)(ExecuteFlags, ExecuteFlags)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.HasFlagFast``1(LiteEntitySystem.ExecuteFlags,LiteEntitySystem.ExecuteFlags)
    name: HasFlagFast
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  - name: <
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: '>'
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: ','
  - name: " "
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.HasFlagFast``1(LiteEntitySystem.ExecuteFlags,LiteEntitySystem.ExecuteFlags)
    name: HasFlagFast
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
  - name: (
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: ','
  - name: " "
  - uid: LiteEntitySystem.ExecuteFlags
    name: ExecuteFlags
    href: LiteEntitySystem.ExecuteFlags.html
  - name: )
- uid: LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
  commentId: M:LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  name: GetEnumValueInt<T>(T)
  nameWithType: Utils.GetEnumValueInt<T>(T)
  fullName: LiteEntitySystem.Utils.GetEnumValueInt<T>(T)
  nameWithType.vb: Utils.GetEnumValueInt(Of T)(T)
  fullName.vb: LiteEntitySystem.Utils.GetEnumValueInt(Of T)(T)
  name.vb: GetEnumValueInt(Of T)(T)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
    name: GetEnumValueInt
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.GetEnumValueInt``1(``0)
    name: GetEnumValueInt
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValueInt__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: LiteEntitySystem.Utils
  commentId: T:LiteEntitySystem.Utils
  parent: LiteEntitySystem
  href: LiteEntitySystem.Utils.html
  name: Utils
  nameWithType: Utils
  fullName: LiteEntitySystem.Utils
- uid: LiteEntitySystem.Utils.GetEnumValue``1(``0)
  commentId: M:LiteEntitySystem.Utils.GetEnumValue``1(``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  name: GetEnumValue<T>(T)
  nameWithType: Utils.GetEnumValue<T>(T)
  fullName: LiteEntitySystem.Utils.GetEnumValue<T>(T)
  nameWithType.vb: Utils.GetEnumValue(Of T)(T)
  fullName.vb: LiteEntitySystem.Utils.GetEnumValue(Of T)(T)
  name.vb: GetEnumValue(Of T)(T)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.GetEnumValue``1(``0)
    name: GetEnumValue
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.GetEnumValue``1(``0)
    name: GetEnumValue
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_GetEnumValue__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
  commentId: M:LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
  href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  name: HasFlagFast<T>(T, T)
  nameWithType: Utils.HasFlagFast<T>(T, T)
  fullName: LiteEntitySystem.Utils.HasFlagFast<T>(T, T)
  nameWithType.vb: Utils.HasFlagFast(Of T)(T, T)
  fullName.vb: LiteEntitySystem.Utils.HasFlagFast(Of T)(T, T)
  name.vb: HasFlagFast(Of T)(T, T)
  spec.csharp:
  - uid: LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
    name: HasFlagFast
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: LiteEntitySystem.Utils.HasFlagFast``1(``0,``0)
    name: HasFlagFast
    href: LiteEntitySystem.Utils.html#LiteEntitySystem_Utils_HasFlagFast__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: LiteEntitySystem.ExecuteFlags
  commentId: T:LiteEntitySystem.ExecuteFlags
  parent: LiteEntitySystem
  href: LiteEntitySystem.ExecuteFlags.html
  name: ExecuteFlags
  nameWithType: ExecuteFlags
  fullName: LiteEntitySystem.ExecuteFlags
